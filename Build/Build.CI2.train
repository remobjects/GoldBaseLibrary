include("$(Train)/ci2.train");

var elementsInTools = expand("$(CIToolsBaseFolder)/Tools/Elements");

//var elementsVersionIni = ini.fromFile("$(elementsInTools)/VersionInfo.ini");
//var elementsVersion = elementsVersionIni.getValue("Options", "VERSION");
var elementsVersion = getVersionNumberFromGlobalIni("Elements");
export("CIVersionNumber", elementsVersion);

var optionNoParallel = !ciOptions.contains("PARALLEL");
var optionRebuild = ciOptions.contains("REBUILD");
var optionClearCache = ciOptions.contains("CLEARCACHE") || optionRebuild;
var useLatestCompiler = true;

if (useLatestCompiler)
{
	var elementsShared = "./elements-shared";
	folder.create(elementsShared);
	var elementsBin = expand("$(elementsShared)/MacDistro");

	export("CIBranch", "develop");
	var sharedElementsS3 = findClosestSharedS3Folder("elements");
	extractZipFromS3(getSharedS3Bucket(), sharedElementsS3, "FullZipDistro.zip", elementsBin);
	file.copy("$(elementsBin)/References/Echoes/NET", elementsBin);
	var ebuildExe = expand('$(elementsBin)/EBuild.exe');
	var eBuildReferenceFolderOverrides = '"--setting:ToffeeSDKFolder=$(elementsBin)/Toffee SDKs" "--setting:IslandSDKFolder=$(elementsBin)/Island SDKs" "--setting:AdditionalReferencePaths=$(elementsInTools)/References"';
}
else
{
	var ebuildExe = expand('$(elementsInTools)/EBuild.exe');
	var eBuildReferenceFolderOverrides = '"--setting:ToffeeSDKFolder=$(elementsInTools)/Toffee SDKs" "--setting:IslandSDKFolder=$(elementsInTools)/Island SDKs" "--setting:AdditionalReferencePaths=$(elementsInTools)/References"';
}
var ebuildIntermediatebasefolder = expand("c:\\ci\\EBuild-cache\\GBL\\$(CIBranch)");
var eBuildStandardParams = expand("--setting:Device=True --setting:Simulator=True --setting:SimulatorArchitecture=Legacy --debug --intermediatebasefolder:$(ebuildIntermediatebasefolder)");

if (optionClearCache)
{
	folder.remove(ebuildIntermediatebasefolder);
}

//
// Methods
//

function runEBuild(project, out, params)
{
	var commandline = expand('--debug --no-copy-local $(eBuildReferenceFolderOverrides) $(eBuildStandardParams) "--out:$(out)" $(params)');
	if (optionRebuild)
		commandline = commandline+" --nocache";
	if (!optionNoParallel)
		commandline = commandline+" --parallel";
	log(commandline);
	ebuild.runCustomEBuild(path.resolve(ebuildExe), project, commandline);	
}

function compileGoBaseLibrary()
{
	msbuild.updateAssemblyVersion("../Source/Gold/Properties/AssemblyInfo.pas", elementsVersion);
	//--skip-targets:Island.Windows;Island.Linux;Island.Darwin.macOS
	runEBuild("../Source/GoBaseLibrary.sln", "./Bin/Go", "--output-folder-uses-mode-name --output-folder-uses-sdk-name --setting:Architecture=Legacy");
	file.remove("../Bin/Go/Echoes/GoldAspect.*"); // we don't need the Aspect
}

compileGoBaseLibrary();

zipName = expand("$(CIReleaseFolder)/GoBaseLibrary.zip");
zip.compress(zipName, "../Source", "*.*", true);

var s3 = getSharedS3Bucket();
s3.uploadFile(zipName, ciSharedPrefix);

